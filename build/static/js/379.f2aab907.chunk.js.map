{"version":3,"file":"static/js/379.f2aab907.chunk.js","mappings":"6NAoDA,MA5CA,YAA8D,IAClCA,EADFC,EAAmC,EAAnCA,WASxB,OACE,iBAAKC,UAAU,aAAf,WACE,gBAAKA,UAAU,mBAAf,UACGC,EAAAA,EAAAA,IAAYF,EAAWG,SAE1B,iBAAKF,UAAU,oBAAf,UACGD,EAAWI,YAAYC,KAAI,SAACC,EAAKC,GAChC,OAAO,gBAAaD,IAAKA,EAAKE,IAAKR,EAAWS,MAAMF,IAAnCA,EAClB,IACAP,EAAWU,QAAUV,EAAWU,OAAOL,KAAI,SAACM,EAAOJ,GAClD,OAAO,gBAAaN,UAAS,+CAA0CM,EAAI,OAAS,QAA7E,SACJI,GADcJ,EAGlB,QAEH,gBAAKN,UAAU,oBAAf,SACGD,EAAWS,MAAMJ,KAAI,SAACO,EAAML,GAC3B,OAAO,gBAAaN,UAAU,mBAAvB,SACJW,GADcL,EAGlB,OAEH,iBAAKN,UAAU,qBAAf,WACE,iBAAKA,UAAU,oBAAf,4EACgBD,EAAWA,WAAWa,KAAK,SAE3C,iBAAKZ,UAAU,qBAAf,uCAC+B,OAAtBD,EAAWD,OAAkBC,EAAWD,OAAS,KACxD,gBAAKE,WApCaF,EAoCeC,EAAWD,OAnCpC,OAAXA,EAAwB,GACR,IAAXA,EAAqB,UACV,IAAXA,EAAqB,SACV,IAAXA,EAAqB,OACV,IAAXA,EAAqB,aAAxB,aAoCR,ECFD,MApCA,YAAuD,IAYjDe,EAZoBC,EAA4B,EAA5BA,KACxB,EAA8BC,EAAAA,UAAe,GAA7C,eAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,EAAAA,UAAe,GAAzC,eAAOG,EAAP,KAAcC,EAAd,KACA,EAAsCJ,EAAAA,SAAmC,IAAzE,eAAOK,EAAP,KAAoBC,EAApB,KA0BA,OAxBAN,EAAAA,WAAgB,WACdO,EAAAA,EAAAA,mBAAuB,CAAEC,OAAQT,EAAKU,KACnCC,KAAKJ,GACLK,MAAMP,GACNQ,SAAQ,kBAAMV,GAAW,EAAjB,GACZ,GAAE,IAIDJ,EADCG,GACS,gFACFE,GACE,6NACqB,IAAvBE,EAAYQ,QACV,2JAGR,SAACC,EAAA,EAAD,UACGT,EAAYhB,KAAI,SAAC0B,EAAGxB,GACnB,OAAO,SAAC,EAAD,CAAwBP,WAAY+B,GAAfxB,EAC7B,OAML,gBAAKkB,GAAG,kBAAR,SACGX,GAGN,C,mEC9BD,MAVA,YAE6B,IAD3BkB,EAC0B,EAD1BA,SAEA,OACE,gBAAK/B,UAAU,aAAf,SACG+B,GAGN,C,sBCdM,SAAS9B,EAAWC,GACzB,IAAM8B,EAAO,IAAIC,KAAK/B,GAChBgC,EAAK,CAAC,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,gBAAMF,EAAKG,UAC/CC,EAAIJ,EAAKK,UACTC,EAAIN,EAAKO,WAAa,EACtBC,EAAIR,EAAKS,WACTC,EAAMV,EAAKW,aAEXC,EAAI,SAACC,GAAD,OAAeA,GAAK,GAAL,UAAaA,GAAb,WAAuBA,EAAtC,EAEV,MAAM,GAAN,OAAUX,EAAV,iBAAkBU,EAAER,GAApB,YAA0BQ,EAAEN,GAA5B,iBAAoCM,EAAEJ,GAAtC,YAA4CI,EAAEF,GAC/C,C","sources":["components/PredictionItem/index.tsx","apps/predictions/index.tsx","components/GamesList/index.tsx","helpers/format-date.ts"],"sourcesContent":["import { formatDate } from \"../../helpers/format-date\";\nimport { PredictionResult } from \"../../types\";\nimport './PredictionItem.sass';\n\ntype PredictionItemProps = {\n  prediction: PredictionResult;\n};\n\nfunction PredictionItem({ prediction }: PredictionItemProps) {\n  function getClassByPoints(points: number | null) {\n    if(points === null) return '';\n    else if(points === 0) return 'nothing';\n    else if(points === 2) return 'result';\n    else if(points === 3) return 'diff';\n    else if(points === 5) return 'score';\n  }\n\n  return (\n    <div className=\"prediction\">\n      <div className=\"prediction__time\">\n        {formatDate(+prediction.time)}\n      </div>\n      <div className=\"prediction__logos\">\n        {prediction.teams_logos.map((src, i) => {\n          return <img key={i} src={src} alt={prediction.teams[i]} />\n        })}\n        {prediction.result && prediction.result.map((score, i) => {\n          return <div key={i} className={`prediction__score prediction__score--${i ? 'away' : 'home'}`}>\n            {score}\n          </div>\n        })}\n      </div>\n      <div className=\"prediction__teams\">\n        {prediction.teams.map((team, i) => {\n          return <div key={i} className=\"prediction__team\">\n            {team}\n          </div>\n        })}\n      </div>\n      <div className=\"prediction__footer\">\n        <div className=\"prediction__value\">\n          Ваш прогноз: {prediction.prediction.join(':')}\n        </div>\n        <div className=\"prediction__points\">\n          Очки: {prediction.points !== null ? prediction.points : '?'}\n          <div className={getClassByPoints(prediction.points)}></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PredictionItem;","import React from \"react\";\nimport api from \"../../api\";\nimport GamesList from \"../../components/GamesList\";\nimport PredictionItem from \"../../components/PredictionItem\";\nimport { PredictionResult, TgUser } from \"../../types\";\nimport './styles.sass'\n\ntype PredictionAppProps = {\n  tg: any;\n  user: TgUser;\n};\n\nfunction PredictionsApp({ user }: PredictionAppProps) {\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(false);\n  const [predictions, setPredictions] = React.useState<PredictionResult[]>([]);\n  \n  React.useEffect(() => {\n    api.getUserPredictions({ userId: user.id })\n      .then(setPredictions)\n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, []);\n\n  let content;\n  if(loading) {\n    content = <h2>Загрузка...</h2>;\n  } else if(error) {\n    content = <h2>Произошла ошибка. Попробуйте еще раз.</h2>\n  } else if(predictions.length === 0) {\n    content = <h2>У вас пока нет прогнозов.</h2>\n  } else {\n    content = (\n      <GamesList>\n        {predictions.map((p, i) => {\n          return <PredictionItem key={i} prediction={p} />\n        })}\n      </GamesList>\n    );\n  }\n\n  return (\n    <div id=\"predictions-app\">\n      {content}\n    </div>\n  );\n}\n\nexport default PredictionsApp;\n","import './GamesList.sass';\n\ntype PredictionGamesListProps = {\n  children: JSX.Element[];\n};\n\nfunction GamesList({\n  children\n}: PredictionGamesListProps){\n  return (\n    <div className=\"games-list\">\n      {children}\n    </div>\n  );\n}\n\nexport default GamesList;\n","export function formatDate(time: number): string {\n  const date = new Date(time);\n  const dw = ['ПН','ВТ','СР','ЧТ','ПТ','СБ','ВС'][date.getDay()];\n  const d = date.getDate();\n  const m = date.getMonth() + 1;\n  const h = date.getHours();\n  const min = date.getMinutes();\n\n  const f = (v: number) => v >= 10 ? `${v}` : `0${v}`;\n\n  return `${dw} · ${f(d)}.${f(m)} · ${f(h)}:${f(min)}`;\n}\n"],"names":["points","prediction","className","formatDate","time","teams_logos","map","src","i","alt","teams","result","score","team","join","content","user","React","loading","setLoading","error","setError","predictions","setPredictions","api","userId","id","then","catch","finally","length","GamesList","p","children","date","Date","dw","getDay","d","getDate","m","getMonth","h","getHours","min","getMinutes","f","v"],"sourceRoot":""}